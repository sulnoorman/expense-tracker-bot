// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  telegramId  BigInt   @unique @map("telegram_id")
  username    String?
  firstName   String?  @map("first_name")
  lastName    String?  @map("last_name")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relations
  categories   Category[]
  transactions Transaction[]

  @@map("users")
}

model Category {
  id        Int      @id @default(autoincrement())
  userId    Int?      @map("user_id")
  name      String
  type      CategoryType
  color     String   @default("#007bff")
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user         User?          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@unique([userId, name, type], name: "unique_user_category")
  @@map("categories")
}

model Transaction {
  id              Int      @id @default(autoincrement())
  userId          Int      @map("user_id")
  categoryId      Int?     @map("category_id")
  amount          Float
  type            TransactionType
  description     String?
  transactionDate DateTime @map("transaction_date")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  // Relations
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@index([userId, transactionDate], name: "idx_user_date")
  @@index([userId, type], name: "idx_user_type")
  @@map("transactions")
}

enum CategoryType {
  EXPENSE
  INCOME
}

enum TransactionType {
  EXPENSE
  INCOME
}

